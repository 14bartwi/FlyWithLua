\BOOKMARK [1][-]{section.1}{Using the Plugin}{}% 1
\BOOKMARK [2][-]{subsection.1.1}{What's needed}{section.1}% 2
\BOOKMARK [2][-]{subsection.1.2}{Installation}{section.1}% 3
\BOOKMARK [2][-]{subsection.1.3}{How to interact with Lua}{section.1}% 4
\BOOKMARK [2][-]{subsection.1.4}{Lua variables and DataRefs}{section.1}% 5
\BOOKMARK [2][-]{subsection.1.5}{Writing a first config file}{section.1}% 6
\BOOKMARK [2][-]{subsection.1.6}{Pre-defined variables}{section.1}% 7
\BOOKMARK [2][-]{subsection.1.7}{Loop Callbacks}{section.1}% 8
\BOOKMARK [2][-]{subsection.1.8}{Menu entries}{section.1}% 9
\BOOKMARK [2][-]{subsection.1.9}{Menu switches}{section.1}% 10
\BOOKMARK [1][-]{section.2}{Reference}{}% 11
\BOOKMARK [2][-]{subsection.2.1}{Predefined variables}{section.2}% 12
\BOOKMARK [3][-]{subsubsection.2.1.1}{PLANE\137ICAO}{subsection.2.1}% 13
\BOOKMARK [3][-]{subsubsection.2.1.2}{PLANE\137TAILNUMBER}{subsection.2.1}% 14
\BOOKMARK [3][-]{subsubsection.2.1.3}{SCREEN\137WIDTH}{subsection.2.1}% 15
\BOOKMARK [3][-]{subsubsection.2.1.4}{SCREEN\137HIGHT}{subsection.2.1}% 16
\BOOKMARK [3][-]{subsubsection.2.1.5}{MOUSE\137X}{subsection.2.1}% 17
\BOOKMARK [3][-]{subsubsection.2.1.6}{MOUSE\137Y}{subsection.2.1}% 18
\BOOKMARK [3][-]{subsubsection.2.1.7}{XSB\137METAR}{subsection.2.1}% 19
\BOOKMARK [3][-]{subsubsection.2.1.8}{LUA\137RUN}{subsection.2.1}% 20
\BOOKMARK [3][-]{subsubsection.2.1.9}{XPLANE\137VERSION}{subsection.2.1}% 21
\BOOKMARK [3][-]{subsubsection.2.1.10}{XPLANE\137HOSTID}{subsection.2.1}% 22
\BOOKMARK [3][-]{subsubsection.2.1.11}{SDK\137VERSION}{subsection.2.1}% 23
\BOOKMARK [3][-]{subsubsection.2.1.12}{SYSTEM}{subsection.2.1}% 24
\BOOKMARK [3][-]{subsubsection.2.1.13}{SYSTEM\137ARCHITECTURE}{subsection.2.1}% 25
\BOOKMARK [3][-]{subsubsection.2.1.14}{XPLANE\137LANGUAGE}{subsection.2.1}% 26
\BOOKMARK [3][-]{subsubsection.2.1.15}{DIRECTORY\137SEPARATOR}{subsection.2.1}% 27
\BOOKMARK [3][-]{subsubsection.2.1.16}{SCRIPT\137DIRECTORY}{subsection.2.1}% 28
\BOOKMARK [3][-]{subsubsection.2.1.17}{AIRCRAFT\137PATH}{subsection.2.1}% 29
\BOOKMARK [3][-]{subsubsection.2.1.18}{AIRCRAFT\137FILENAME}{subsection.2.1}% 30
\BOOKMARK [2][-]{subsection.2.2}{Lua functions}{section.2}% 31
\BOOKMARK [3][-]{subsubsection.2.2.1}{DataRef\( "variable name", "DataRef name" \)}{subsection.2.2}% 32
\BOOKMARK [3][-]{subsubsection.2.2.2}{DataRef\( "variable name", "DataRef name", "readonly" \)}{subsection.2.2}% 33
\BOOKMARK [3][-]{subsubsection.2.2.3}{DataRef\( "variable name", "DataRef name", "readonly", index \)}{subsection.2.2}% 34
\BOOKMARK [3][-]{subsubsection.2.2.4}{DataRef name, Index, readonly, DataRef type, DataRef ID = get\137DataRef\137binding\( "variable name" \)}{subsection.2.2}% 35
\BOOKMARK [3][-]{subsubsection.2.2.5}{button\( button number \)}{subsection.2.2}% 36
\BOOKMARK [3][-]{subsubsection.2.2.6}{last\137button\( button number \)}{subsection.2.2}% 37
\BOOKMARK [3][-]{subsubsection.2.2.7}{create\137switch\( button number, DataRef name, index, off value, on value \)}{subsection.2.2}% 38
\BOOKMARK [3][-]{subsubsection.2.2.8}{create\137positive\137edge\137trigger\( button number, DataRef name, index, value \)}{subsection.2.2}% 39
\BOOKMARK [3][-]{subsubsection.2.2.9}{create\137negative\137edge\137trigger\( button number, DataRef name, index, value \)}{subsection.2.2}% 40
\BOOKMARK [3][-]{subsubsection.2.2.10}{create\137positive\137edge\137increment\( button number, DataRef name, index, stepping, limit, rounding \)}{subsection.2.2}% 41
\BOOKMARK [3][-]{subsubsection.2.2.11}{create\137negative\137edge\137increment\( button number, DataRef name, index, stepping, limit, rounding \)}{subsection.2.2}% 42
\BOOKMARK [3][-]{subsubsection.2.2.12}{create\137positive\137edge\137decrement\( button number, DataRef name, index, stepping, limit, rounding \)}{subsection.2.2}% 43
\BOOKMARK [3][-]{subsubsection.2.2.13}{create\137negative\137edge\137decrement\( button number, DataRef name, index, stepping, limit, rounding \)}{subsection.2.2}% 44
\BOOKMARK [3][-]{subsubsection.2.2.14}{get\( "DataRef name" \)}{subsection.2.2}% 45
\BOOKMARK [3][-]{subsubsection.2.2.15}{get\( "DataRef name", index \)}{subsection.2.2}% 46
\BOOKMARK [3][-]{subsubsection.2.2.16}{set\( "DataRef name", value \)}{subsection.2.2}% 47
\BOOKMARK [3][-]{subsubsection.2.2.17}{set\137array\( "DataRef name", index, value \)}{subsection.2.2}% 48
\BOOKMARK [3][-]{subsubsection.2.2.18}{set\137button\137assignment\( button number, "simulator function"\)}{subsection.2.2}% 49
\BOOKMARK [3][-]{subsubsection.2.2.19}{set\137axis\137assignment\( axis number, "axis function", "reverse"\)}{subsection.2.2}% 50
\BOOKMARK [3][-]{subsubsection.2.2.20}{clear\137all\137axis\137assignments\(\)}{subsection.2.2}% 51
\BOOKMARK [3][-]{subsubsection.2.2.21}{clear\137all\137button\137assignments\(\)}{subsection.2.2}% 52
\BOOKMARK [3][-]{subsubsection.2.2.22}{set\137pilots\137head\( x, y, z, heading, pitch \)}{subsection.2.2}% 53
\BOOKMARK [3][-]{subsubsection.2.2.23}{x, y, z, heading, pitch = get\137pilots\137head\( \)}{subsection.2.2}% 54
\BOOKMARK [3][-]{subsubsection.2.2.24}{command\137once\( "simulator function" \)}{subsection.2.2}% 55
\BOOKMARK [3][-]{subsubsection.2.2.25}{logMsg\( "string" \)}{subsection.2.2}% 56
\BOOKMARK [3][-]{subsubsection.2.2.26}{XSBSpeakString\( "string" \)}{subsection.2.2}% 57
\BOOKMARK [3][-]{subsubsection.2.2.27}{print\( "string" \)}{subsection.2.2}% 58
\BOOKMARK [3][-]{subsubsection.2.2.28}{do\137sometimes\( "Lua code string" \)}{subsection.2.2}% 59
\BOOKMARK [3][-]{subsubsection.2.2.29}{do\137often\( "Lua code string" \)}{subsection.2.2}% 60
\BOOKMARK [3][-]{subsubsection.2.2.30}{do\137every\137frame\( "Lua code string" \)}{subsection.2.2}% 61
\BOOKMARK [3][-]{subsubsection.2.2.31}{do\137every\137draw\( "Lua code string" \)}{subsection.2.2}% 62
\BOOKMARK [3][-]{subsubsection.2.2.32}{do\137on\137keystroke\( "Lua code string" \)}{subsection.2.2}% 63
\BOOKMARK [3][-]{subsubsection.2.2.33}{do\137on\137mouse\137wheel\( "Lua code string" \)}{subsection.2.2}% 64
\BOOKMARK [3][-]{subsubsection.2.2.34}{do\137on\137mouse\137click\( "Lua code string" \)}{subsection.2.2}% 65
\BOOKMARK [3][-]{subsubsection.2.2.35}{do\137on\137new\137metar\( "Lua code string" \)}{subsection.2.2}% 66
\BOOKMARK [3][-]{subsubsection.2.2.36}{draw\137string\( x, y, "string" \)}{subsection.2.2}% 67
\BOOKMARK [3][-]{subsubsection.2.2.37}{draw\137string\( x, y, "string", "color" \)}{subsection.2.2}% 68
\BOOKMARK [3][-]{subsubsection.2.2.38}{draw\137string\( x, y, "string", red, green, blue \)}{subsection.2.2}% 69
\BOOKMARK [3][-]{subsubsection.2.2.39}{draw\137string\137Helvetica\13710\( x, y, "string" \)}{subsection.2.2}% 70
\BOOKMARK [3][-]{subsubsection.2.2.40}{draw\137string\137Helvetica\13712\( x, y, "string" \)}{subsection.2.2}% 71
\BOOKMARK [3][-]{subsubsection.2.2.41}{draw\137string\137Helvetica\13718\( x, y, "string" \)}{subsection.2.2}% 72
\BOOKMARK [3][-]{subsubsection.2.2.42}{draw\137string\137Times\137Roman\13710\( x, y, "string" \)}{subsection.2.2}% 73
\BOOKMARK [3][-]{subsubsection.2.2.43}{draw\137string\137Times\137Roman\13724\( x, y, "string" \)}{subsection.2.2}% 74
\BOOKMARK [3][-]{subsubsection.2.2.44}{measure\137string\( "string" \)}{subsection.2.2}% 75
\BOOKMARK [3][-]{subsubsection.2.2.45}{measure\137string\( "string", "font name" \)}{subsection.2.2}% 76
\BOOKMARK [3][-]{subsubsection.2.2.46}{hight, width = bubble\( x, y, "title", \203 \)}{subsection.2.2}% 77
\BOOKMARK [3][-]{subsubsection.2.2.47}{hight, width = big\137bubble\( x, y, "title", \203 \)}{subsection.2.2}% 78
\BOOKMARK [3][-]{subsubsection.2.2.48}{hight, width = huge\137bubble\( x, y, "title", \203 \)}{subsection.2.2}% 79
\BOOKMARK [3][-]{subsubsection.2.2.49}{add\137macro\( "macro name", "Lua code string" \)}{subsection.2.2}% 80
\BOOKMARK [3][-]{subsubsection.2.2.50}{add\137ATC\137macro\( "macro name", "Lua code string" \)}{subsection.2.2}% 81
\BOOKMARK [3][-]{subsubsection.2.2.51}{add\137macro\( "macro name", "activation code string", "deactivation code string", "default state" \)}{subsection.2.2}% 82
\BOOKMARK [3][-]{subsubsection.2.2.52}{create\137command\( "command name", "command description", "begin code string", "continue code string", "end code string" \)}{subsection.2.2}% 83
\BOOKMARK [3][-]{subsubsection.2.2.53}{table = directory\137to\137table\( "path" \)}{subsection.2.2}% 84
\BOOKMARK [3][-]{subsubsection.2.2.54}{crash\137the\137sim\(\)}{subsection.2.2}% 85
\BOOKMARK [1][-]{section.3}{Modules}{}% 86
\BOOKMARK [2][-]{subsection.3.1}{The Radio Module}{section.3}% 87
\BOOKMARK [2][-]{subsection.3.2}{The XSquawkBox Module}{section.3}% 88
\BOOKMARK [3][-]{subsubsection.3.2.1}{XSBConnect\(\)}{subsection.3.2}% 89
\BOOKMARK [3][-]{subsubsection.3.2.2}{XSBUserLogin\(\)}{subsection.3.2}% 90
\BOOKMARK [3][-]{subsubsection.3.2.3}{XSBDisconnect\(\)}{subsection.3.2}% 91
\BOOKMARK [3][-]{subsubsection.3.2.4}{XSBShowFlightplan\(\)}{subsection.3.2}% 92
\BOOKMARK [3][-]{subsubsection.3.2.5}{XSBSendFlightplan\(\)}{subsection.3.2}% 93
\BOOKMARK [3][-]{subsubsection.3.2.6}{frequency = XSBLookupATC\( "name string" \)}{subsection.3.2}% 94
\BOOKMARK [2][-]{subsection.3.3}{The Bit Module}{section.3}% 95
\BOOKMARK [1][-]{section.4}{OpenAL sound}{}% 96
\BOOKMARK [2][-]{subsection.4.1}{Buffers, Sounds and Listeners}{section.4}% 97
\BOOKMARK [2][-]{subsection.4.2}{Loading and defining sounds}{section.4}% 98
\BOOKMARK [3][-]{subsubsection.4.2.1}{table position = load\137WAV\137file\( filename \)}{subsection.4.2}% 99
\BOOKMARK [3][-]{subsubsection.4.2.2}{let\137sound\137loop\( table position, boolean value \)}{subsection.4.2}% 100
\BOOKMARK [3][-]{subsubsection.4.2.3}{set\137sound\137pitch\( table position, float value \)}{subsection.4.2}% 101
\BOOKMARK [3][-]{subsubsection.4.2.4}{set\137sound\137gain\( table position, float value \)}{subsection.4.2}% 102
\BOOKMARK [2][-]{subsection.4.3}{Using the sounds from the sound table}{section.4}% 103
\BOOKMARK [3][-]{subsubsection.4.3.1}{play\137sound\( table position \)}{subsection.4.3}% 104
\BOOKMARK [3][-]{subsubsection.4.3.2}{stop\137sound\( table position \)}{subsection.4.3}% 105
\BOOKMARK [3][-]{subsubsection.4.3.3}{pause\137sound\( table position \)}{subsection.4.3}% 106
\BOOKMARK [3][-]{subsubsection.4.3.4}{rewind\137sound\( table position \)}{subsection.4.3}% 107
\BOOKMARK [1][-]{section.5}{OpenGL graphics}{}% 108
\BOOKMARK [2][-]{subsection.5.1}{Functions of OpenGL}{section.5}% 109
\BOOKMARK [3][-]{subsubsection.5.1.1}{glBegin\137POINTS\(\)}{subsection.5.1}% 110
\BOOKMARK [3][-]{subsubsection.5.1.2}{glBegin\137LINES\(\)}{subsection.5.1}% 111
\BOOKMARK [3][-]{subsubsection.5.1.3}{glBegin\137LINE\137STRIP\(\)}{subsection.5.1}% 112
\BOOKMARK [3][-]{subsubsection.5.1.4}{glBegin\137LINE\137LOOP\(\)}{subsection.5.1}% 113
\BOOKMARK [3][-]{subsubsection.5.1.5}{glBegin\137POLYGON\(\)}{subsection.5.1}% 114
\BOOKMARK [3][-]{subsubsection.5.1.6}{glBegin\137TRIANGLES\(\)}{subsection.5.1}% 115
\BOOKMARK [3][-]{subsubsection.5.1.7}{glBegin\137TRIANGLE\137STRIP\(\)}{subsection.5.1}% 116
\BOOKMARK [3][-]{subsubsection.5.1.8}{glBegin\137TRIANGLE\137FAN\(\)}{subsection.5.1}% 117
\BOOKMARK [3][-]{subsubsection.5.1.9}{glBegin\137QUADS\(\)}{subsection.5.1}% 118
\BOOKMARK [3][-]{subsubsection.5.1.10}{glBegin\137QUAD\137STRIP\(\)}{subsection.5.1}% 119
\BOOKMARK [3][-]{subsubsection.5.1.11}{glEnd\(\)}{subsection.5.1}% 120
\BOOKMARK [3][-]{subsubsection.5.1.12}{glVertex2f\(x, y\)}{subsection.5.1}% 121
\BOOKMARK [3][-]{subsubsection.5.1.13}{glVertex3f\(x, y, z\)}{subsection.5.1}% 122
\BOOKMARK [3][-]{subsubsection.5.1.14}{glLineWidth\(width\)}{subsection.5.1}% 123
\BOOKMARK [3][-]{subsubsection.5.1.15}{glColor3f\(red, green, blue\)}{subsection.5.1}% 124
\BOOKMARK [3][-]{subsubsection.5.1.16}{glColor4f\(red, green, blue, alpha\)}{subsection.5.1}% 125
\BOOKMARK [3][-]{subsubsection.5.1.17}{glRectf\(x1, y1, x2, y2\)}{subsection.5.1}% 126
\BOOKMARK [3][-]{subsubsection.5.1.18}{XPLMSetGraphicsState\(EnableFog, NumberTexUnits, EnableLighting, EnableAlphaTesting, EnableAlphaBlending, EnableDepthTesting, EnableDepthWriting\)}{subsection.5.1}% 127
\BOOKMARK [1][-]{section.6}{The graphics module}{}% 128
\BOOKMARK [2][-]{subsection.6.1}{Functions of graphics module}{section.6}% 129
\BOOKMARK [3][-]{subsubsection.6.1.1}{x\137result, y\137result = graphics.move\137angle\( x, y, angle, length \)}{subsection.6.1}% 130
\BOOKMARK [3][-]{subsubsection.6.1.2}{graphics.draw\137line\( x1, y1, x2, y2 \)}{subsection.6.1}% 131
\BOOKMARK [3][-]{subsubsection.6.1.3}{graphics.draw\137rectangle\( x1, y1, x2, y2 \)}{subsection.6.1}% 132
\BOOKMARK [3][-]{subsubsection.6.1.4}{graphics.draw\137triangle\( x1, y1, x2, y2, x3, y3 \)}{subsection.6.1}% 133
\BOOKMARK [3][-]{subsubsection.6.1.5}{graphics.set\137color\( red, green, blue, alpha \)}{subsection.6.1}% 134
\BOOKMARK [3][-]{subsubsection.6.1.6}{graphics.set\137width\( width \)}{subsection.6.1}% 135
\BOOKMARK [3][-]{subsubsection.6.1.7}{graphics.draw\137angle\137line\( x, y, angle, length \)}{subsection.6.1}% 136
\BOOKMARK [3][-]{subsubsection.6.1.8}{graphics.draw\137angle\137arrow\( x, y, angle, length, arrowhead's length, line width \)}{subsection.6.1}% 137
\BOOKMARK [3][-]{subsubsection.6.1.9}{graphics.draw\137circle\( x, y, radius, line width \)}{subsection.6.1}% 138
\BOOKMARK [3][-]{subsubsection.6.1.10}{graphics.draw\137filled\137circle\( x, y, radius \)}{subsection.6.1}% 139
\BOOKMARK [3][-]{subsubsection.6.1.11}{graphics.draw\137arc\( x, y, start angle, end angle, radius, line width \)}{subsection.6.1}% 140
\BOOKMARK [3][-]{subsubsection.6.1.12}{graphics.draw\137filled\137arc\( x, y, start angle, end angle, radius \)}{subsection.6.1}% 141
\BOOKMARK [3][-]{subsubsection.6.1.13}{graphics.draw\137tick\137mark\( x, y, angle, radius, length, width \)}{subsection.6.1}% 142
\BOOKMARK [3][-]{subsubsection.6.1.14}{graphics.draw\137outer\137tracer\( x, y, angle, radius, size \)}{subsection.6.1}% 143
\BOOKMARK [3][-]{subsubsection.6.1.15}{graphics.draw\137inner\137tracer\( x, y, angle, radius, size \)}{subsection.6.1}% 144
\BOOKMARK [1][-]{section.7}{HUD module}{}% 145
\BOOKMARK [2][-]{subsection.7.1}{An Interactive HUD}{section.7}% 146
\BOOKMARK [2][-]{subsection.7.2}{An Example}{section.7}% 147
\BOOKMARK [2][-]{subsection.7.3}{Functions from HUD module}{section.7}% 148
\BOOKMARK [3][-]{subsubsection.7.3.1}{HUD.begin\137HUD\( x, y, width, hight, "name", "always" \)}{subsection.7.3}% 149
\BOOKMARK [3][-]{subsubsection.7.3.2}{HUD.end\137HUD\( \)}{subsection.7.3}% 150
\BOOKMARK [3][-]{subsubsection.7.3.3}{HUD.create\137element\( "name", x, y, width, hight, red, green, blue, alpha \)}{subsection.7.3}% 151
\BOOKMARK [3][-]{subsubsection.7.3.4}{HUD.draw\137string\( x, y, fontsize, "string", red, green, blue, alpha \)}{subsection.7.3}% 152
\BOOKMARK [3][-]{subsubsection.7.3.5}{HUD.draw\137fstring\( x, y, fontsize, "format", "expression", red, green, blue, alpha \)}{subsection.7.3}% 153
\BOOKMARK [3][-]{subsubsection.7.3.6}{HUD.create\137backlight\137indicator\( x, y, width, hight, "condition", red, green, blue, alpha \)}{subsection.7.3}% 154
\BOOKMARK [3][-]{subsubsection.7.3.7}{HUD.create\137click\137action\( x, y, width, hight, "action" \)}{subsection.7.3}% 155
\BOOKMARK [3][-]{subsubsection.7.3.8}{HUD.create\137click\137switch\( x, y, width, hight, "variable", value, alternative value \)}{subsection.7.3}% 156
\BOOKMARK [3][-]{subsubsection.7.3.9}{HUD.create\137wheel\137action\( x, y, width, hight, "action" \)}{subsection.7.3}% 157
\BOOKMARK [1][-]{section.8}{XPLMNavigation}{}% 158
\BOOKMARK [2][-]{subsection.8.1}{Functions from XPLMNavigation}{section.8}% 159
\BOOKMARK [3][-]{subsubsection.8.1.1}{nav\137reference = XPLMGetFirstNavAid\(\)}{subsection.8.1}% 160
\BOOKMARK [3][-]{subsubsection.8.1.2}{next\137nav\137reference = XPLMGetNextNavAid\( inNavAidRef \)}{subsection.8.1}% 161
\BOOKMARK [3][-]{subsubsection.8.1.3}{first\137nav\137reference = XPLMFindFirstNavAidOfType\( inType \)}{subsection.8.1}% 162
\BOOKMARK [3][-]{subsubsection.8.1.4}{last\137nav\137reference = XPLMFindLastNavAidOfType\( inType \)}{subsection.8.1}% 163
\BOOKMARK [3][-]{subsubsection.8.1.5}{nav\137reference = XPLMFindNavAid\( inNameFragment, inIDFragment, inLat, inLon, inFrequency, inType\)}{subsection.8.1}% 164
\BOOKMARK [3][-]{subsubsection.8.1.6}{outType, outLatitude, outLongitude, outHeight, outFrequency, outHeading, outID, outName = XPLMGetNavAidInfo\( inRef \)}{subsection.8.1}% 165
\BOOKMARK [3][-]{subsubsection.8.1.7}{index\137count = XPLMCountFMSEntries\(\)}{subsection.8.1}% 166
\BOOKMARK [3][-]{subsubsection.8.1.8}{index = XPLMGetDisplayedFMSEntry\(\)}{subsection.8.1}% 167
\BOOKMARK [3][-]{subsubsection.8.1.9}{index = XPLMGetDestinationFMSEntry\(\)}{subsection.8.1}% 168
\BOOKMARK [3][-]{subsubsection.8.1.10}{XPLMSetDisplayedFMSEntry\( inIndex \)}{subsection.8.1}% 169
\BOOKMARK [3][-]{subsubsection.8.1.11}{XPLMSetDestinationFMSEntry\( inIndex \)}{subsection.8.1}% 170
\BOOKMARK [3][-]{subsubsection.8.1.12}{outType, outID, outRef, outAltitude, outLat, outLon = XPLMGetFMSEntryInfo\( inIndex \)}{subsection.8.1}% 171
\BOOKMARK [3][-]{subsubsection.8.1.13}{XPLMSetFMSEntryInfo\( inIndex, inRef, inAltitude\)}{subsection.8.1}% 172
\BOOKMARK [3][-]{subsubsection.8.1.14}{XPLMSetFMSEntryLatLon\( inIndex, inLat, inLon, inAltitude\)}{subsection.8.1}% 173
\BOOKMARK [3][-]{subsubsection.8.1.15}{XPLMClearFMSEntry\( inIndex \)}{subsection.8.1}% 174
\BOOKMARK [1][-]{section.9}{Access HID devices}{}% 175
\BOOKMARK [2][-]{subsection.9.1}{Pre-defined variables}{section.9}% 176
\BOOKMARK [3][-]{subsubsection.9.1.1}{NUMBER\137OF\137HID\137DEVICES}{subsection.9.1}% 177
\BOOKMARK [3][-]{subsubsection.9.1.2}{ALL\137HID\137DEVICES}{subsection.9.1}% 178
\BOOKMARK [2][-]{subsection.9.2}{HID related functions}{section.9}% 179
\BOOKMARK [3][-]{subsubsection.9.2.1}{table, number = create\137HID\137table\(\)}{subsection.9.2}% 180
\BOOKMARK [3][-]{subsubsection.9.2.2}{device = hid\137open\( vendor\137ID, product\137ID \)}{subsection.9.2}% 181
\BOOKMARK [3][-]{subsubsection.9.2.3}{device = hid\137open\137path\( path \)}{subsection.9.2}% 182
\BOOKMARK [3][-]{subsubsection.9.2.4}{hid\137close\( device \)}{subsection.9.2}% 183
\BOOKMARK [3][-]{subsubsection.9.2.5}{hid\137write\( device, report ID, value, ... \)}{subsection.9.2}% 184
\BOOKMARK [3][-]{subsubsection.9.2.6}{nov, variable, ... = hid\137read\137timeout\( device, nov wanted, milliseconds \)}{subsection.9.2}% 185
\BOOKMARK [3][-]{subsubsection.9.2.7}{nov, variable, ... = hid\137read\137timeout\( device, nov wanted \)}{subsection.9.2}% 186
\BOOKMARK [3][-]{subsubsection.9.2.8}{success = hid\137set\137nonblocking\( device, nonblock \)}{subsection.9.2}% 187
\BOOKMARK [3][-]{subsubsection.9.2.9}{nobw = hid\137send\137feature\137report\( device, report ID, value, ... \)}{subsection.9.2}% 188
\BOOKMARK [3][-]{subsubsection.9.2.10}{nobr, report ID, variable, ... = hid\137get\137feature\137report\( device, novw \)}{subsection.9.2}% 189
\BOOKMARK [1][-]{section.10}{Classic and modern mode}{}% 190
\BOOKMARK [2][-]{subsection.10.1}{Reading classic functions}{section.10}% 191
\BOOKMARK [3][-]{subsubsection.10.1.1}{variable = XPLMGetDatai\( DataRef \)}{subsection.10.1}% 192
\BOOKMARK [3][-]{subsubsection.10.1.2}{variable = XPLMGetDataf\( DataRef \)}{subsection.10.1}% 193
\BOOKMARK [3][-]{subsubsection.10.1.3}{variable = XPLMGetDatad\( DataRef \)}{subsection.10.1}% 194
\BOOKMARK [3][-]{subsubsection.10.1.4}{table = XPLMGetDatavi\( DataRef, inIndex, inMax \)}{subsection.10.1}% 195
\BOOKMARK [3][-]{subsubsection.10.1.5}{table = XPLMGetDatavf\( DataRef \)}{subsection.10.1}% 196
\BOOKMARK [3][-]{subsubsection.10.1.6}{userdata variable = XPLMFindDataRef\( DataRef Name \)}{subsection.10.1}% 197
\BOOKMARK [3][-]{subsubsection.10.1.7}{datatype variable = XPLMGetDataRefTypes\( DataRef reference \)}{subsection.10.1}% 198
\BOOKMARK [2][-]{subsection.10.2}{Writing classic functions}{section.10}% 199
\BOOKMARK [3][-]{subsubsection.10.2.1}{XPLMSetDatai\( DataRef, variable or value\)}{subsection.10.2}% 200
\BOOKMARK [3][-]{subsubsection.10.2.2}{XPLMSetDataf\( DataRef, variable or value\)}{subsection.10.2}% 201
\BOOKMARK [3][-]{subsubsection.10.2.3}{XPLMSetDatad\( DataRef, variable or value\)}{subsection.10.2}% 202
\BOOKMARK [3][-]{subsubsection.10.2.4}{XPLMSetDatavi\( DataRef, table, inIndex, inMax \)}{subsection.10.2}% 203
\BOOKMARK [3][-]{subsubsection.10.2.5}{XPLMSetDatavf\( DataRef, table, inIndex, inMax \)}{subsection.10.2}% 204
\BOOKMARK [1][-]{section.11}{The Lua way to access DataRefs}{}% 205
\BOOKMARK [2][-]{subsection.11.1}{A magic metatable}{section.11}% 206
\BOOKMARK [3][-]{subsubsection.11.1.1}{table = dataref\137table\( DataRef \)}{subsection.11.1}% 207
\BOOKMARK [1][-]{section.12}{Manage your joysticks}{}% 208
\BOOKMARK [2][-]{subsection.12.1}{Get a basic configuration}{section.12}% 209
\BOOKMARK [2][-]{subsection.12.2}{Define your sticks}{section.12}% 210
\BOOKMARK [2][-]{subsection.12.3}{Define type specific assignments}{section.12}% 211
\BOOKMARK [2][-]{subsection.12.4}{Lua for cockpit builders}{section.12}% 212
\BOOKMARK [1][-]{section.13}{Understanding PLCs}{}% 213
\BOOKMARK [1][-]{section.14}{Basic knowledge about DataRefs}{}% 214
\BOOKMARK [2][-]{subsection.14.1}{What are DataRefs?}{section.14}% 215
\BOOKMARK [2][-]{subsection.14.2}{Find the right DataRefs}{section.14}% 216
\BOOKMARK [2][-]{subsection.14.3}{Accessing DataRefs}{section.14}% 217
\BOOKMARK [2][-]{subsection.14.4}{Observe the DataRef}{section.14}% 218
\BOOKMARK [1][-]{section.15}{Take Lua into consideration}{}% 219
\BOOKMARK [2][-]{subsection.15.1}{Strings inside of strings}{section.15}% 220
\BOOKMARK [2][-]{subsection.15.2}{Multiple line strings}{section.15}% 221
\BOOKMARK [2][-]{subsection.15.3}{Global or local variables?}{section.15}% 222
\BOOKMARK [2][-]{subsection.15.4}{Tables are tables}{section.15}% 223
\BOOKMARK [1][-]{section.16}{Debugging}{}% 224
\BOOKMARK [1][-]{section.17}{Integrate foreign libraries}{}% 225
\BOOKMARK [1][-]{section.18}{The new 64-bit architecture}{}% 226
\BOOKMARK [2][-]{subsection.18.1}{Architecture exclusive script loading}{section.18}% 227
\BOOKMARK [2][-]{subsection.18.2}{Checking architecture inside a script}{section.18}% 228
\BOOKMARK [2][-]{subsection.18.3}{64-bit DLLs}{section.18}% 229
\BOOKMARK [1][-]{section.19}{Q\046A}{}% 230
\BOOKMARK [2][-]{subsection.19.1}{My script doesn't work. What can I do?}{section.19}% 231
\BOOKMARK [3][-]{subsubsection.19.1.1}{Check the debug info file and Log.txt}{subsection.19.1}% 232
\BOOKMARK [3][-]{subsubsection.19.1.2}{Check for conflicts to other scripts}{subsection.19.1}% 233
\BOOKMARK [3][-]{subsubsection.19.1.3}{I really can't solve it!}{subsection.19.1}% 234
\BOOKMARK [2][-]{subsection.19.2}{How to ask the developer of FlyWithLua for help?}{section.19}% 235
\BOOKMARK [2][-]{subsection.19.3}{Is the debug file privacy safe?}{section.19}% 236
\BOOKMARK [2][-]{subsection.19.4}{Where are the Splines?}{section.19}% 237
\BOOKMARK [2][-]{subsection.19.5}{Feature requests}{section.19}% 238
\BOOKMARK [2][-]{subsection.19.6}{Can I store Lua files inside the aircraft's folder?}{section.19}% 239
\BOOKMARK [2][-]{subsection.19.7}{I want full access to X-Plane's plugin SDK!}{section.19}% 240
\BOOKMARK [2][-]{subsection.19.8}{Using Lua For Windows}{section.19}% 241
\BOOKMARK [1][-]{section.20}{Credits}{}% 242
\BOOKMARK [1][-]{section.21}{License}{}% 243
